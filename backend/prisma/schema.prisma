generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  email      String      @unique
  name       String?
  createdAt  DateTime    @default(now())
  characters Character[]
  sessions   Session[]
  traits     Trait[]
}

model Character {
  id          String           @id @default(uuid())
  name        String           @unique
  universe    String?
  aliases     String[]
  createdById String
  createdAt   DateTime         @default(now())
  createdBy   User             @relation(fields: [createdById], references: [id])
  traits      CharacterTrait[]
}

model Trait {
  id          String           @id @default(uuid())
  key         String           @unique
  displayName String
  type        Typetrait
  popularity  Float?           @default(0)
  infoValue   Float?           @default(0)
  active      Boolean          @default(true)
  createdById String
  answerLogs  AnswerLog[]
  characters  CharacterTrait[]
  createdBy   User             @relation(fields: [createdById], references: [id])
}

model CharacterTrait {
  id          String    @id @default(uuid())
  characterId String
  traitId     String
  value       String
  character   Character @relation(fields: [characterId], references: [id])
  trait       Trait     @relation(fields: [traitId], references: [id])
}

model Session {
  id        String      @id @default(uuid())
  userId    String?
  createdAt DateTime    @default(now())
  completed Boolean     @default(false)
  answers   AnswerLog[]
  user      User?       @relation(fields: [userId], references: [id])
}

model AnswerLog {
  id         String   @id @default(uuid())
  sessionId  String
  traitId    String
  answer     String
  answeredAt DateTime @default(now())
  session    Session  @relation(fields: [sessionId], references: [id])
  trait      Trait    @relation(fields: [traitId], references: [id])
}

enum Typetrait {
  BOOLEAN
  STRING
  ENUM
}

enum CommonTraitValue {
  TRUE
  FALSE
  UNKNOWN
}
